/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type { Token20, Token20Interface } from "../../contracts/Token20";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "testToken",
        type: "string",
      },
      {
        internalType: "string",
        name: "Test",
        type: "string",
      },
      {
        internalType: "uint8",
        name: "decimals_",
        type: "uint8",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "burn",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "burnFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "addedValue",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b50604051620014a9380380620014a98339810160408190526200003491620002d3565b82826003620000448382620003e6565b506004620000538282620003e6565b505050620000706200006a620000cb60201b60201c565b620000cf565b6005805460ff60a01b1916600160a01b60ff841602179055620000c233620000a1600554600160a01b900460ff1690565b620000ae90600a620005c7565b620000bc90612710620005df565b62000121565b50505062000617565b3390565b600580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6001600160a01b0382166200017c5760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604482015260640160405180910390fd5b806002600082825462000190919062000601565b90915550506001600160a01b03821660009081526020819052604081208054839290620001bf90849062000601565b90915550506040518181526001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a35050565b505050565b634e487b7160e01b600052604160045260246000fd5b600082601f8301126200023657600080fd5b81516001600160401b03808211156200025357620002536200020e565b604051601f8301601f19908116603f011681019082821181831017156200027e576200027e6200020e565b816040528381526020925086838588010111156200029b57600080fd5b600091505b83821015620002bf5785820183015181830184015290820190620002a0565b600093810190920192909252949350505050565b600080600060608486031215620002e957600080fd5b83516001600160401b03808211156200030157600080fd5b6200030f8783880162000224565b945060208601519150808211156200032657600080fd5b50620003358682870162000224565b925050604084015160ff811681146200034d57600080fd5b809150509250925092565b600181811c908216806200036d57607f821691505b6020821081036200038e57634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156200020957600081815260208120601f850160051c81016020861015620003bd5750805b601f850160051c820191505b81811015620003de57828155600101620003c9565b505050505050565b81516001600160401b038111156200040257620004026200020e565b6200041a8162000413845462000358565b8462000394565b602080601f831160018114620004525760008415620004395750858301515b600019600386901b1c1916600185901b178555620003de565b600085815260208120601f198616915b82811015620004835788860151825594840194600190910190840162000462565b5085821015620004a25787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b634e487b7160e01b600052601160045260246000fd5b600181815b8085111562000509578160001904821115620004ed57620004ed620004b2565b80851615620004fb57918102915b93841c9390800290620004cd565b509250929050565b6000826200052257506001620005c1565b816200053157506000620005c1565b81600181146200054a5760028114620005555762000575565b6001915050620005c1565b60ff841115620005695762000569620004b2565b50506001821b620005c1565b5060208310610133831016604e8410600b84101617156200059a575081810a620005c1565b620005a68383620004c8565b8060001904821115620005bd57620005bd620004b2565b0290505b92915050565b6000620005d860ff84168362000511565b9392505050565b6000816000190483118215151615620005fc57620005fc620004b2565b500290565b80820180821115620005c157620005c1620004b2565b610e8280620006276000396000f3fe608060405234801561001057600080fd5b506004361061011b5760003560e01c806370a08231116100b257806395d89b4111610081578063a9059cbb11610066578063a9059cbb1461026b578063dd62ed3e1461027e578063f2fde38b146102b757600080fd5b806395d89b4114610250578063a457c2d71461025857600080fd5b806370a08231146101f1578063715018a61461021a57806379cc6790146102225780638da5cb5b1461023557600080fd5b8063313ce567116100ee578063313ce5671461018657806339509351146101b657806340c10f19146101c957806342966c68146101de57600080fd5b806306fdde0314610120578063095ea7b31461013e57806318160ddd1461016157806323b872dd14610173575b600080fd5b6101286102ca565b6040516101359190610c98565b60405180910390f35b61015161014c366004610d02565b61035c565b6040519015158152602001610135565b6002545b604051908152602001610135565b610151610181366004610d2c565b610376565b60055474010000000000000000000000000000000000000000900460ff1660405160ff9091168152602001610135565b6101516101c4366004610d02565b61039a565b6101dc6101d7366004610d02565b6103d9565b005b6101dc6101ec366004610d68565b6103e7565b6101656101ff366004610d81565b6001600160a01b031660009081526020819052604090205490565b6101dc6103f4565b6101dc610230366004610d02565b610408565b6005546040516001600160a01b039091168152602001610135565b61012861041d565b610151610266366004610d02565b61042c565b610151610279366004610d02565b6104db565b61016561028c366004610da3565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6101dc6102c5366004610d81565b6104e9565b6060600380546102d990610dd6565b80601f016020809104026020016040519081016040528092919081815260200182805461030590610dd6565b80156103525780601f1061032757610100808354040283529160200191610352565b820191906000526020600020905b81548152906001019060200180831161033557829003601f168201915b5050505050905090565b60003361036a818585610576565b60019150505b92915050565b6000336103848582856106cf565b61038f858585610761565b506001949350505050565b3360008181526001602090815260408083206001600160a01b038716845290915281205490919061036a90829086906103d4908790610e26565b610576565b6103e38282610978565b5050565b6103f13382610a57565b50565b6103fc610bd4565b6104066000610c2e565b565b6104138233836106cf565b6103e38282610a57565b6060600480546102d990610dd6565b3360008181526001602090815260408083206001600160a01b0387168452909152812054909190838110156104ce5760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f7760448201527f207a65726f00000000000000000000000000000000000000000000000000000060648201526084015b60405180910390fd5b61038f8286868403610576565b60003361036a818585610761565b6104f1610bd4565b6001600160a01b03811661056d5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f646472657373000000000000000000000000000000000000000000000000000060648201526084016104c5565b6103f181610c2e565b6001600160a01b0383166105f15760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f2061646460448201527f726573730000000000000000000000000000000000000000000000000000000060648201526084016104c5565b6001600160a01b03821661066d5760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f20616464726560448201527f737300000000000000000000000000000000000000000000000000000000000060648201526084016104c5565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591015b60405180910390a3505050565b6001600160a01b03838116600090815260016020908152604080832093861683529290522054600019811461075b578181101561074e5760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e636500000060448201526064016104c5565b61075b8484848403610576565b50505050565b6001600160a01b0383166107dd5760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f20616460448201527f647265737300000000000000000000000000000000000000000000000000000060648201526084016104c5565b6001600160a01b0382166108595760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201527f657373000000000000000000000000000000000000000000000000000000000060648201526084016104c5565b6001600160a01b038316600090815260208190526040902054818110156108e85760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e742065786365656473206260448201527f616c616e6365000000000000000000000000000000000000000000000000000060648201526084016104c5565b6001600160a01b0380851660009081526020819052604080822085850390559185168152908120805484929061091f908490610e26565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8460405161096b91815260200190565b60405180910390a361075b565b6001600160a01b0382166109ce5760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f20616464726573730060448201526064016104c5565b80600260008282546109e09190610e26565b90915550506001600160a01b03821660009081526020819052604081208054839290610a0d908490610e26565b90915550506040518181526001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a35050565b6001600160a01b038216610ad35760405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f2061646472657360448201527f730000000000000000000000000000000000000000000000000000000000000060648201526084016104c5565b6001600160a01b03821660009081526020819052604090205481811015610b625760405162461bcd60e51b815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e60448201527f636500000000000000000000000000000000000000000000000000000000000060648201526084016104c5565b6001600160a01b0383166000908152602081905260408120838303905560028054849290610b91908490610e39565b90915550506040518281526000906001600160a01b038516907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef906020016106c2565b6005546001600160a01b031633146104065760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016104c5565b600580546001600160a01b038381167fffffffffffffffffffffffff0000000000000000000000000000000000000000831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b600060208083528351808285015260005b81811015610cc557858101830151858201604001528201610ca9565b506000604082860101526040601f19601f8301168501019250505092915050565b80356001600160a01b0381168114610cfd57600080fd5b919050565b60008060408385031215610d1557600080fd5b610d1e83610ce6565b946020939093013593505050565b600080600060608486031215610d4157600080fd5b610d4a84610ce6565b9250610d5860208501610ce6565b9150604084013590509250925092565b600060208284031215610d7a57600080fd5b5035919050565b600060208284031215610d9357600080fd5b610d9c82610ce6565b9392505050565b60008060408385031215610db657600080fd5b610dbf83610ce6565b9150610dcd60208401610ce6565b90509250929050565b600181811c90821680610dea57607f821691505b602082108103610e0a57634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b8082018082111561037057610370610e10565b8181038181111561037057610370610e1056fea2646970667358221220b030fbacf094479c527de3ed9d877a3552901e2fabd0c1439bf2eee789fbc86164736f6c63430008100033";

type Token20ConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: Token20ConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Token20__factory extends ContractFactory {
  constructor(...args: Token20ConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    testToken: PromiseOrValue<string>,
    Test: PromiseOrValue<string>,
    decimals_: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<Token20> {
    return super.deploy(
      testToken,
      Test,
      decimals_,
      overrides || {}
    ) as Promise<Token20>;
  }
  override getDeployTransaction(
    testToken: PromiseOrValue<string>,
    Test: PromiseOrValue<string>,
    decimals_: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      testToken,
      Test,
      decimals_,
      overrides || {}
    );
  }
  override attach(address: string): Token20 {
    return super.attach(address) as Token20;
  }
  override connect(signer: Signer): Token20__factory {
    return super.connect(signer) as Token20__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): Token20Interface {
    return new utils.Interface(_abi) as Token20Interface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Token20 {
    return new Contract(address, _abi, signerOrProvider) as Token20;
  }
}
